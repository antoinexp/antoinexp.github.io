{"version":3,"sources":["ChartWrapper.js","R0Slider.js","GameWorker.js","Animate.js","DashboardViews.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["props","containerRef","useRef","config","rest","useState","chart","setChart","useEffect","update","duration","lazy","ctx","current","Chart","ref","useStyles","makeStyles","theme","root","width","margin","height","spacing","control","padding","marks","value","label","valuetext","setR0","Paper","Typography","id","gutterBottom","Slider","min","max","defaultValue","getAriaValueText","aria-labelledby","step","onChange","event","newValue","valueLabelDisplay","Worker","Animate","fps","draw","that","this","animationFrameId","start","frameCount","startDate","Date","now","lastUpdate","render","elapsedMils","elapsed","frameId","window","requestAnimationFrame","stop","console","log","cancelAnimationFrame","makeConfig","name","ylabel","type","data","datasets","fill","pointRadius","options","legend","display","title","text","scales","xAxes","yAxes","scaleLabel","labelString","infected_cfg","ticks","callback","index","values","lineTension","hospital_cfg","gdp_cfg","r0_cfg","borderColor","backgroundColor","x","y","stepSize","autoSkip","maxWidth","flexGrow","death","setDeath","gdp","setGDP","R0","gameWorkerRef","setGameWorkerRef","progressRate","setProgressRate","appendData","old_cfg","set_cfg","p","cfg","push","l","length","DashboardViews","IGraphCfg","setIGraphCfg","GDPGraphCfg","setGDPGraphCfg","R0GraphCfg","setR0GraphCfg","pareto_cfg","ParetoCfg","setParetoCfg","HospitalCfg","setHospitalCfg","quote","setQuote","severity","setSeverity","React","open","setOpen","gameWorker","GameWorker","onmessage","t","I","GDP","H","Math","floor","D","progress","updatePareto","params","postMessage","useTheme","charts","map","idx","ChartWrapper","ChartSwitcher","active","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","MobileStepper","variant","steps","position","nextButton","Button","size","onClick","disabled","direction","backButton","Container","Grid","container","justify","alignItems","item","xs","round","Snackbar","autoHideDuration","onClose","reason","anchorOrigin","vertical","horizontal","elevation","LinearProgress","R0Slider","App","className","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28dba7cf.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\n\nimport Chart from 'chart.js'\n\nexport default props => {\n    const containerRef = useRef(null)\n\n    const { config, ...rest } = props\n\n    const [chart, setChart] = useState();\n\n    useEffect(() => {\n        if (chart) {\n            chart.update({\n                duration: 500,\n                lazy: true,\n                //easing: 'easeInOutSine'\n            });\n        }\n    }, [config]);\n\n    useEffect(() => {\n        var ctx = containerRef.current;\n        setChart(new Chart(ctx, config));\n    }, [])\n\n    return <canvas ref={containerRef} {...rest} />\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst marks = [\n    {\n        value: 0.1,\n        label: '0.1',\n    },\n    {\n        value: 1.,\n        label: '1.0',\n    },\n    {\n        value: 2.,\n        label: '2.0',\n    },\n    {\n        value: 3.0,\n        label: '3.0',\n    },\n];\n\nfunction valuetext(value) {\n    return `R0=${value}`;\n}\n\n\nexport default (props) => {\n    const classes = useStyles();\n\n    const { setR0, ...rest } = props\n\n    const handleSliderChange = (event, newValue) => {\n        setR0(newValue);\n    };\n\n    return (\n        <Paper>\n            <div>\n                <Typography id=\"discrete-slider-always\" gutterBottom>\n                    R0\n            </Typography>\n                <Slider\n                    min={0.1}\n                    max={3.}\n                    defaultValue={3.}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-always\"\n                    step={0.1}\n                    marks={marks}\n                    onChange={handleSliderChange}\n                    valueLabelDisplay=\"on\"\n                />\n            </div>\n        </Paper>\n    );\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/GameWorker.370545f5.worker.js\");\n}\n","function Animate(fps, draw) {\n    var that = this;\n\n    that.animationFrameId = 0;\n\n    that.start = () => {\n        let frameCount = 0\n        let animationFrameId\n\n        const startDate = Date.now()\n        var lastUpdate = startDate\n\n        function render() {\n            var now = Date.now()\n            var elapsedMils = now - lastUpdate\n\n            if (elapsedMils >= (1000 / fps)) {\n                frameCount++;\n                if (draw) {\n                    draw({\n                        elapsed: now - startDate,\n                        frameId: frameCount,\n                    })\n                }\n                lastUpdate = now - elapsedMils % (1000 / fps)\n            }\n            that.animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n\n        return that\n    }\n\n\n    that.stop = () => {\n        console.log(that.animationFrameId)\n        window.cancelAnimationFrame(that.animationFrameId)\n    }\n\n}\n\nexport default Animate","function makeConfig(name, ylabel) {\n    return {\n        type: 'line',\n        data: {\n            datasets: [{\n                label: 'Filled',\n                data: [],\n                fill: true,\n                pointRadius: []\n            }]\n        },\n        options: {\n            legend: {\n                display: false\n            },\n            title: {\n                display: true,\n                text: name\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    type: 'time',\n                }],\n                yAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: true,\n                        labelString: ylabel\n                    }\n                }]\n            }\n        }\n    };\n}\n\nvar infected_cfg = makeConfig(\"Infected\", \"cases\");\ninfected_cfg.options.scales.yAxes[0].ticks = {\n    callback: function (value, index, values) {\n        if (value >= 1e6) {\n            return value / 1e6 + 'M';\n        } else if (value >= 1e3) {\n            return value / 1e3 + 'K';\n        }\n        return value\n    },\n    min: 0.\n}\ninfected_cfg.data.datasets[0].lineTension = 0;\n\nvar hospital_cfg = makeConfig(\"Hospital Capacity\", \"%\");\nhospital_cfg.options.scales.yAxes[0].ticks = {\n    min: 0,\n    max: 200.\n}\n\n\n\nvar gdp_cfg = makeConfig(\"GDP\", \"%\");\ngdp_cfg.options.scales.yAxes[0].ticks = {\n    min: -20,\n    max: 0.\n}\n\nvar r0_cfg = makeConfig(\"R0\", \"ratio\");\nr0_cfg.options.scales.yAxes[0].ticks = {\n    min: 0,\n    max: 4\n}\n\nvar pareto_cfg = {\n    type: 'scatter',\n    data: {\n        datasets: [{\n            borderColor: \"#b30000\",\n            backgroundColor: \"#ff3333\",\n            data: [{ x: 1., y: 0. }]\n        },\n        {\n            data: [{ x: 50000., y: -8. }]\n        }\n        ]\n    },\n    options: {\n        legend: {\n            display: false\n        },\n        title: {\n            display: true,\n            text: \"Pareto\"\n        },\n        scales: {\n            xAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: \"Death\"\n                },\n                ticks: {\n                    min: 1,\n                    max: 10000000,\n                    stepSize: 10,\n                    autoSkip: false,\n\n                    callback: function (value, index, values) {\n                        if (value === 10000000) return \"10M\";\n                        if (value === 1000000) return \"1M\";\n                        if (value === 100000) return \"100K\";\n                        if (value === 10000) return \"10K\";\n                        if (value === 1000) return \"1K\";\n                        if (value === 100) return \"100\";\n                        if (value === 10) return \"10\";\n                        if (value === 0) return \"0\";\n                        return null;\n                    }\n                },\n                type: 'logarithmic'\n            }],\n            yAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: \"GDP\"\n                },\n                ticks: {\n                    min: -20,\n                    max: 0.\n                }\n            }]\n        }\n    }\n};\n\nexport default {\n    \"hospital_cfg\": hospital_cfg,\n    \"infected_cfg\": infected_cfg,\n    \"gdp_cfg\": gdp_cfg,\n    \"r0_cfg\": r0_cfg,\n    \"pareto_cfg\": pareto_cfg\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport ChartWrapper from \"./ChartWrapper\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport R0Slider from \"./R0Slider\";\nimport { useState } from 'react'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport GameWorker from 'worker-loader!./GameWorker.js';\n\nimport { useRef, useEffect } from 'react'\nimport Animate from \"./Animate\"\n\nimport DashboardViews from \"./DashboardViews\"\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n        flexGrow: 1,\n    },\n});\n\nexport default (props) => {\n    const [death, setDeath] = useState(0);\n    const [gdp, setGDP] = useState(0);\n\n    const [R0, setR0] = useState(3.);\n    const [gameWorkerRef, setGameWorkerRef] = useState();\n    const [progressRate, setProgressRate] = useState(0.);\n\n    function appendData(old_cfg, set_cfg, p) {\n        var cfg = { ...old_cfg };\n        cfg.data.datasets[0].data.push(p);\n        cfg.data.datasets[0].pointRadius.push(2);\n        const l = cfg.data.datasets[0].pointRadius.length;\n        if (l >= 3) {\n            cfg.data.datasets[0].pointRadius[l - 2] = 0;\n        }\n\n        set_cfg(cfg);\n    }\n\n    function updatePareto(old_cfg, set_cfg, p) {\n        var cfg = { ...old_cfg };\n        cfg.data.datasets[0].data[0] = p\n        set_cfg(cfg);\n    }\n\n    const [IGraphCfg, setIGraphCfg] = useState(DashboardViews.infected_cfg);\n    const [GDPGraphCfg, setGDPGraphCfg] = useState(DashboardViews.gdp_cfg);\n    const [R0GraphCfg, setR0GraphCfg] = useState(DashboardViews.r0_cfg);\n    const [ParetoCfg, setParetoCfg] = useState(DashboardViews.pareto_cfg);\n    const [HospitalCfg, setHospitalCfg] = useState(DashboardViews.hospital_cfg);\n    const [quote, setQuote] = useState(\"\");\n    const [severity, setSeverity] = useState(\"success\");\n\n    const [open, setOpen] = React.useState(false);\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        let gameWorker = (new GameWorker());\n        setGameWorkerRef(gameWorker);\n\n        gameWorker.onmessage = (event) => {\n            if (event.data.type == \"data\") {\n                const t = event.data.t;\n                const I = event.data.I;\n                const GDP = event.data.GDP;\n                const R0 = event.data.R0;\n                const H = event.data.H;\n                setDeath(Math.floor(event.data.D));\n                setProgressRate(100 * event.data.progress);\n                setGDP(GDP);\n\n                appendData(IGraphCfg, setIGraphCfg, { t: t, y: I });\n                appendData(GDPGraphCfg, setGDPGraphCfg, { t: t, y: 100 * GDP });\n                appendData(R0GraphCfg, setR0GraphCfg, { t: t, y: R0 });\n                appendData(HospitalCfg, setHospitalCfg, { t: t, y: 100 * H });\n\n                updatePareto(ParetoCfg, setParetoCfg, { x: 1 + event.data.D, y: 100 * GDP });\n            } else if (event.data.type == \"quote\") {\n                setQuote(event.data.quote);\n                setSeverity(event.data.severity)\n                setOpen(true);\n            }\n        };\n\n        var animation = new Animate(1, params => {\n            gameWorker.postMessage('getdata');\n        });\n\n        return animation.start().stop\n    }, []);\n\n\n    useEffect(() => {\n        if (gameWorkerRef) {\n            gameWorkerRef.postMessage({ \"R0\": R0, \"msg\": \"setR0\" })\n        }\n    }, [R0]);\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const charts = [\n        ParetoCfg, IGraphCfg, HospitalCfg, GDPGraphCfg, R0GraphCfg\n    ].map((cfg, idx) => <ChartWrapper key={idx} config={cfg} width={100} height={50} />);\n\n    function ChartSwitcher(charts, active = 0) {\n        const [activeStep, setActiveStep] = React.useState(active);\n\n        const handleNext = () => {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        };\n\n        const handleBack = () => {\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        };\n\n        return (\n            <Paper>\n                <MobileStepper\n                    variant=\"dots\"\n                    steps={charts.length}\n                    position=\"static\"\n                    activeStep={activeStep}\n                    nextButton={\n                        <Button size=\"small\" onClick={handleNext} disabled={activeStep === charts.length - 1}>\n                            Next\n                                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                        </Button>\n                    }\n                    backButton={\n                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                                Back\n                                </Button>\n                    }\n                />\n                {charts.map((chart, idx) => (activeStep === idx && chart))}\n            </Paper>\n        );\n    }\n\n\n\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={3}\n            >\n                <Grid item xs={12}>\n                    <Paper>\n                        <Grid container justify=\"center\" spacing={2}\n                            alignItems=\"stretch\">\n                            <Grid item>\n                                <Paper>\n                                    GDP: {Math.round(100 * gdp, 2)}%\n                            </Paper>\n                            </Grid>\n                            <Grid item>\n                                <Paper>\n                                    Death Toll: {death}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}\n                    anchorOrigin={{ vertical: \"TOP\", horizontal: \"CENTER\" }}\n                >\n                    <MuiAlert severity={severity} elevation={6} variant=\"filled\" >\n                        {quote}\n                    </MuiAlert>\n                </Snackbar>\n                <Grid item>\n                    <Paper>\n                        <LinearProgress variant=\"determinate\" value={progressRate} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    {ChartSwitcher(charts, 1)}\n                </Grid>\n                <Grid item>\n                    {ChartSwitcher(charts, 3)}\n                </Grid>\n                <Grid item>\n                    <R0Slider setR0={setR0} />\n                </Grid>\n            </Grid>\n        </Container >\n    );\n}   ","import './App.css';\nimport React from 'react';\nimport Dashboard from \"./Dashboard\";\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\nfunction HideAppBar(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">Covid Simulator</Typography>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Dashboard />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}