{"version":3,"sources":["ChartWrapper.js","R0Slider.js","GameWorker.js","Animate.js","DashboardViews.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["props","containerRef","useRef","config","rest","useState","chart","setChart","useEffect","update","duration","lazy","ctx","current","Chart","ref","useStyles","makeStyles","theme","root","width","margin","height","spacing","control","padding","marks","value","label","valuetext","setR0","Paper","Typography","id","gutterBottom","Slider","min","max","defaultValue","getAriaValueText","aria-labelledby","step","onChange","event","newValue","valueLabelDisplay","Worker","Animate","fps","draw","that","this","animationFrameId","start","frameCount","startDate","Date","now","lastUpdate","render","elapsedMils","elapsed","frameId","window","requestAnimationFrame","stop","console","log","cancelAnimationFrame","makeConfig","name","ylabel","type","data","datasets","fill","pointRadius","options","legend","display","title","text","scales","xAxes","yAxes","scaleLabel","labelString","infected_cfg","ticks","callback","index","values","lineTension","gdp_cfg","r0_cfg","maxWidth","flexGrow","death","setDeath","gdp","setGDP","R0","gameWorkerRef","setGameWorkerRef","progressRate","setProgressRate","appendData","old_cfg","set_cfg","p","cfg","push","l","length","DashboardViews","IGraphCfg","setIGraphCfg","GDPGraphCfg","setGDPGraphCfg","R0GraphCfg","setR0GraphCfg","gameWorker","GameWorker","onmessage","t","I","GDP","Math","floor","D","progress","y","params","postMessage","useTheme","React","activeStep","setActiveStep","Container","Grid","container","direction","justify","alignItems","item","xs","round","LinearProgress","variant","MobileStepper","steps","position","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","ChartWrapper","R0Slider","App","className","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sSAIe,WAAAA,GACX,IAAMC,EAAeC,iBAAO,MAEpBC,EAAoBH,EAApBG,OAAWC,EAHC,YAGQJ,EAHR,cAKMK,qBALN,mBAKbC,EALa,KAKNC,EALM,KAsBpB,OAfAC,qBAAU,WACFF,GACAA,EAAMG,OAAO,CACTC,SAAU,IACVC,MAAM,MAIf,CAACR,IAEJK,qBAAU,WACN,IAAII,EAAMX,EAAaY,QACvBN,EAAS,IAAIO,IAAMF,EAAKT,MACzB,IAEI,oCAAQY,IAAKd,GAAkBG,K,iCCpBpCY,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,KAEXC,OAAQ,CACJC,OAAQJ,EAAMK,QAAQ,IAG1BC,QAAS,CACLC,QAASP,EAAMK,QAAQ,QAIzBG,EAAQ,CACV,CACIC,MAAO,GACPC,MAAO,OAEX,CACID,MAAO,EACPC,MAAO,OAEX,CACID,MAAO,EACPC,MAAO,OAEX,CACID,MAAO,EACPC,MAAO,QAIf,SAASC,EAAUF,GACf,MAAM,MAAN,OAAaA,GAIF,eAAC3B,GACIgB,IAAhB,IAEQc,EAAmB9B,EAAnB8B,MAHc,YAGK9B,EAHL,WAStB,OACI,cAAC+B,EAAA,EAAD,UACI,gCACI,cAACC,EAAA,EAAD,CAAYC,GAAG,yBAAyBC,cAAY,EAApD,gBAGA,cAACC,EAAA,EAAD,CACIC,IAAK,GACLC,IAAK,EACLC,aAAc,EACdC,iBAAkBV,EAClBW,kBAAgB,yBAChBC,KAAM,GACNf,MAAOA,EACPgB,SAlBW,SAACC,EAAOC,GAC/Bd,EAAMc,IAkBMC,kBAAkB,aCnEvB,aACb,OAAO,IAAIC,OAAO,IAA0B,4CCwC/BC,MAzCf,SAAiBC,EAAKC,GAClB,IAAIC,EAAOC,KAEXD,EAAKE,iBAAmB,EAExBF,EAAKG,MAAQ,WACT,IAAIC,EAAa,EAGXC,EAAYC,KAAKC,MACnBC,EAAaH,EAoBjB,OAlBA,SAASI,IACL,IAAIF,EAAMD,KAAKC,MACXG,EAAcH,EAAMC,EAEpBE,GAAgB,IAAOZ,IACvBM,IACIL,GACAA,EAAK,CACDY,QAASJ,EAAMF,EACfO,QAASR,IAGjBI,EAAaD,EAAMG,GAAe,IAAOZ,IAE7CE,EAAKE,iBAAmBW,OAAOC,sBAAsBL,GAEzDA,GAEOT,GAIXA,EAAKe,KAAO,WACRC,QAAQC,IAAIjB,EAAKE,kBACjBW,OAAOK,qBAAqBlB,EAAKE,oBCpCzC,SAASiB,EAAWC,EAAMC,GACtB,MAAO,CACHC,KAAM,OACNC,KAAM,CACFC,SAAU,CAAC,CACP9C,MAAO,SACP6C,KAAM,GACNE,MAAM,EACNC,YAAa,MAGrBC,QAAS,CACLC,OAAQ,CACJC,SAAS,GAEbC,MAAO,CACHD,SAAS,EACTE,KAAMX,GAEVY,OAAQ,CACJC,MAAO,CAAC,CACJJ,SAAS,EACTP,KAAM,SAEVY,MAAO,CAAC,CACJL,SAAS,EACTM,WAAY,CACRN,SAAS,EACTO,YAAaf,QAQrC,IAAIgB,EAAelB,EAAW,WAAY,SAC1CkB,EAAaV,QAAQK,OAAOE,MAAM,GAAGI,MAAQ,CACzCC,SAAU,SAAU9D,EAAO+D,EAAOC,GAC9B,OAAIhE,GAAS,IACFA,EAAQ,IAAM,IACdA,GAAS,IACTA,EAAQ,IAAM,IAElBA,GAEXS,IAAK,GAETmD,EAAad,KAAKC,SAAS,GAAGkB,YAAc,EAE5C,IAAIC,EAAUxB,EAAW,MAAO,KAChCwB,EAAQhB,QAAQK,OAAOE,MAAM,GAAGI,MAAQ,CACpCpD,KAAM,GACNC,IAAK,GAGT,IAAIyD,EAASzB,EAAW,KAAM,SAC9ByB,EAAOjB,QAAQK,OAAOE,MAAM,GAAGI,MAAQ,CACnCpD,IAAK,EACLC,IAAK,GAGM,OACX,aAAgBkD,EAChB,QAAWM,EACX,OAAUC,G,2DClCR9E,EAAYC,YAAW,CACzBE,KAAM,CACF4E,SAAU,IACVC,SAAU,KAIH,WAAChG,GAAW,IAAD,EACIK,mBAAS,GADb,mBACf4F,EADe,KACRC,EADQ,OAEA7F,mBAAS,GAFT,mBAEf8F,EAFe,KAEVC,EAFU,OAIF/F,mBAAS,GAJP,mBAIfgG,EAJe,KAIXvE,EAJW,OAKoBzB,qBALpB,mBAKfiG,EALe,KAKAC,EALA,OAMkBlG,mBAAS,GAN3B,mBAMfmG,EANe,KAMDC,EANC,KAQtB,SAASC,EAAWC,EAASC,EAASC,GAClC,IAAIC,EAAG,eAAQH,GACfG,EAAIrC,KAAKC,SAAS,GAAGD,KAAKsC,KAAKF,GAC/BC,EAAIrC,KAAKC,SAAS,GAAGE,YAAYmC,KAAK,GACtC,IAAMC,EAAIF,EAAIrC,KAAKC,SAAS,GAAGE,YAAYqC,OACvCD,GAAK,IACLF,EAAIrC,KAAKC,SAAS,GAAGE,YAAYoC,EAAI,GAAK,GAG9CJ,EAAQE,GAjBU,MAoBYzG,mBAAS6G,EAAe3B,cApBpC,mBAoBf4B,EApBe,KAoBJC,EApBI,OAqBgB/G,mBAAS6G,EAAerB,SArBxC,mBAqBfwB,EArBe,KAqBFC,EArBE,OAsBcjH,mBAAS6G,EAAepB,QAtBtC,mBAsBfyB,EAtBe,KAsBHC,EAtBG,KAwBtBhH,qBAAU,WACN,IAAIiH,EAAc,IAAIC,EAqBtB,OApBAnB,EAAiBkB,GAEjBA,EAAWE,UAAY,SAAChF,GACpB,IAAMiF,EAAIjF,EAAM8B,KAAKmD,EACfC,EAAIlF,EAAM8B,KAAKoD,EACfC,EAAMnF,EAAM8B,KAAKqD,IACjBzB,EAAK1D,EAAM8B,KAAK4B,GACtBH,EAAS6B,KAAKC,MAAMrF,EAAM8B,KAAKwD,IAC/BxB,EAAgB,IAAM9D,EAAM8B,KAAKyD,UACjC9B,EAAO0B,GAEPpB,EAAWS,EAAWC,EAAc,CAAEQ,EAAGA,EAAGO,EAAGN,IAC/CnB,EAAWW,EAAaC,EAAgB,CAAEM,EAAGA,EAAGO,EAAG,IAAML,IACzDpB,EAAWa,EAAYC,EAAe,CAAEI,EAAGA,EAAGO,EAAG9B,KAGrC,IAAItD,EAAQ,GAAG,SAAAqF,GAC3BX,EAAWY,YAAY,cAGVhF,QAAQY,OAC1B,IAGHzD,qBAAU,WACF8F,GACAA,EAAc+B,YAAY,CAAE,GAAMhC,EAAI,IAAO,YAElD,CAACA,IAIYrF,IAAhB,IACME,GAAQoH,cA3DQ,GA6DcC,IAAMlI,SAAS,GA7D7B,qBA6DfmI,GA7De,MA6DHC,GA7DG,MAuEtB,OACI,cAACC,EAAA,EAAD,CAAW3C,SAAS,KAApB,SACI,eAAC4C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SACtBC,QAAQ,aACRC,WAAW,UACXxH,QAAS,EAHb,UAKI,cAACoH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACI,cAAClH,EAAA,EAAD,UACI,eAAC4G,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASvH,QAAS,EACtCwH,WAAW,UADf,UAEI,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACjH,EAAA,EAAD,mBACUgG,KAAKmB,MAAM,IAAM/C,EAAK,GADhC,SAIJ,cAACwC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACjH,EAAA,EAAD,0BACiBkE,cAOjC,cAAC0C,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACjH,EAAA,EAAD,UACI,cAACoH,EAAA,EAAD,CAAgBC,QAAQ,cAAczH,MAAO6E,QAGrD,cAACmC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACjH,EAAA,EAAD,WACI,cAACsH,EAAA,EAAD,CACID,QAAQ,OACRE,MAAO,EACPC,SAAS,SACTf,WAAYA,GACZgB,WACI,eAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QA9C9B,WACflB,IAAc,SAACmB,GAAD,OAAoBA,EAAiB,MA6CeC,SAAyB,IAAfrB,GAApD,iBAEyB,QAApBtH,GAAM2H,UAAsB,cAAC,IAAD,IAAwB,cAAC,IAAD,OAG7DiB,WACI,eAACL,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAhD9B,WACflB,IAAc,SAACmB,GAAD,OAAoBA,EAAiB,MA+CeC,SAAyB,IAAfrB,GAApD,UACyB,QAApBtH,GAAM2H,UAAsB,cAAC,IAAD,IAAyB,cAAC,IAAD,IAD1D,YAMR,cAACkB,EAAD,CAAc5J,OAAQgH,EAAW/F,MAAO,IAAKE,OAAQ,UAG7D,cAACqH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACjH,EAAA,EAAD,UACI,cAACgI,EAAD,CAAc5J,OAAQkH,EAAajG,MAAO,IAAKE,OAAQ,SAG/D,cAACqH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACjH,EAAA,EAAD,UACI,cAACgI,EAAD,CAAc5J,OAAQoH,EAAYnG,MAAO,IAAKE,OAAQ,SAG9D,cAACqH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,cAACgB,EAAD,CAAUlI,MAAOA,Y,+BClHtBmI,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACC,EAAD,SCzCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlH,OACP,cAAC,IAAMmH,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fff282ee.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\n\nimport Chart from 'chart.js'\n\nexport default props => {\n    const containerRef = useRef(null)\n\n    const { config, ...rest } = props\n\n    const [chart, setChart] = useState();\n\n    useEffect(() => {\n        if (chart) {\n            chart.update({\n                duration: 500,\n                lazy: true,\n                //easing: 'easeInOutSine'\n            });\n        }\n    }, [config]);\n\n    useEffect(() => {\n        var ctx = containerRef.current;\n        setChart(new Chart(ctx, config));\n    }, [])\n\n    return <canvas ref={containerRef} {...rest} />\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst marks = [\n    {\n        value: 0.1,\n        label: '0.1',\n    },\n    {\n        value: 1.,\n        label: '1.0',\n    },\n    {\n        value: 2.,\n        label: '2.0',\n    },\n    {\n        value: 3.0,\n        label: '3.0',\n    },\n];\n\nfunction valuetext(value) {\n    return `R0=${value}`;\n}\n\n\nexport default (props) => {\n    const classes = useStyles();\n\n    const { setR0, ...rest } = props\n\n    const handleSliderChange = (event, newValue) => {\n        setR0(newValue);\n    };\n\n    return (\n        <Paper>\n            <div>\n                <Typography id=\"discrete-slider-always\" gutterBottom>\n                    R0\n            </Typography>\n                <Slider\n                    min={0.1}\n                    max={3.}\n                    defaultValue={3.}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-always\"\n                    step={0.1}\n                    marks={marks}\n                    onChange={handleSliderChange}\n                    valueLabelDisplay=\"on\"\n                />\n            </div>\n        </Paper>\n    );\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/GameWorker.b7829cd9.worker.js\");\n}\n","function Animate(fps, draw) {\n    var that = this;\n\n    that.animationFrameId = 0;\n\n    that.start = () => {\n        let frameCount = 0\n        let animationFrameId\n\n        const startDate = Date.now()\n        var lastUpdate = startDate\n\n        function render() {\n            var now = Date.now()\n            var elapsedMils = now - lastUpdate\n\n            if (elapsedMils >= (1000 / fps)) {\n                frameCount++;\n                if (draw) {\n                    draw({\n                        elapsed: now - startDate,\n                        frameId: frameCount,\n                    })\n                }\n                lastUpdate = now - elapsedMils % (1000 / fps)\n            }\n            that.animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n\n        return that\n    }\n\n\n    that.stop = () => {\n        console.log(that.animationFrameId)\n        window.cancelAnimationFrame(that.animationFrameId)\n    }\n\n}\n\nexport default Animate","function makeConfig(name, ylabel) {\n    return {\n        type: 'line',\n        data: {\n            datasets: [{\n                label: 'Filled',\n                data: [],\n                fill: true,\n                pointRadius: []\n            }]\n        },\n        options: {\n            legend: {\n                display: false\n            },\n            title: {\n                display: true,\n                text: name\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    type: 'time',\n                }],\n                yAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: true,\n                        labelString: ylabel\n                    }\n                }]\n            }\n        }\n    };\n}\n\nvar infected_cfg = makeConfig(\"Infected\", \"cases\");\ninfected_cfg.options.scales.yAxes[0].ticks = {\n    callback: function (value, index, values) {\n        if (value >= 1e6) {\n            return value / 1e6 + 'M';\n        } else if (value >= 1e3) {\n            return value / 1e3 + 'K';\n        }\n        return value\n    },\n    min: 0.\n}\ninfected_cfg.data.datasets[0].lineTension = 0;\n\nvar gdp_cfg = makeConfig(\"GDP\", \"%\");\ngdp_cfg.options.scales.yAxes[0].ticks = {\n    min: -20,\n    max: 0.\n}\n\nvar r0_cfg = makeConfig(\"R0\", \"ratio\");\nr0_cfg.options.scales.yAxes[0].ticks = {\n    min: 0,\n    max: 4\n}\n\nexport default {\n    \"infected_cfg\": infected_cfg,\n    \"gdp_cfg\": gdp_cfg,\n    \"r0_cfg\": r0_cfg,\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport ChartWrapper from \"./ChartWrapper\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport R0Slider from \"./R0Slider\";\nimport { useState } from 'react'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport GameWorker from 'worker-loader!./GameWorker.js';\n\nimport { useRef, useEffect } from 'react'\nimport Animate from \"./Animate\"\n\nimport DashboardViews from \"./DashboardViews\"\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nimport { useTheme } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n        flexGrow: 1,\n    },\n});\n\nexport default (props) => {\n    const [death, setDeath] = useState(0);\n    const [gdp, setGDP] = useState(0);\n\n    const [R0, setR0] = useState(3.);\n    const [gameWorkerRef, setGameWorkerRef] = useState();\n    const [progressRate, setProgressRate] = useState(0.);\n\n    function appendData(old_cfg, set_cfg, p) {\n        var cfg = { ...old_cfg };\n        cfg.data.datasets[0].data.push(p);\n        cfg.data.datasets[0].pointRadius.push(2);\n        const l = cfg.data.datasets[0].pointRadius.length;\n        if (l >= 3) {\n            cfg.data.datasets[0].pointRadius[l - 2] = 0;\n        }\n\n        set_cfg(cfg);\n    }\n\n    const [IGraphCfg, setIGraphCfg] = useState(DashboardViews.infected_cfg);\n    const [GDPGraphCfg, setGDPGraphCfg] = useState(DashboardViews.gdp_cfg);\n    const [R0GraphCfg, setR0GraphCfg] = useState(DashboardViews.r0_cfg);\n\n    useEffect(() => {\n        let gameWorker = (new GameWorker());\n        setGameWorkerRef(gameWorker);\n\n        gameWorker.onmessage = (event) => {\n            const t = event.data.t;\n            const I = event.data.I;\n            const GDP = event.data.GDP;\n            const R0 = event.data.R0;\n            setDeath(Math.floor(event.data.D));\n            setProgressRate(100 * event.data.progress);\n            setGDP(GDP);\n\n            appendData(IGraphCfg, setIGraphCfg, { t: t, y: I });\n            appendData(GDPGraphCfg, setGDPGraphCfg, { t: t, y: 100 * GDP });\n            appendData(R0GraphCfg, setR0GraphCfg, { t: t, y: R0 });\n        };\n\n        var animation = new Animate(1, params => {\n            gameWorker.postMessage('getdata');\n        });\n\n        return animation.start().stop\n    }, []);\n\n\n    useEffect(() => {\n        if (gameWorkerRef) {\n            gameWorkerRef.postMessage({ \"R0\": R0, \"msg\": \"setR0\" })\n        }\n    }, [R0]);\n\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [activeStep, setActiveStep] = React.useState(0);\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={3}\n            >\n                <Grid item xs={12}>\n                    <Paper>\n                        <Grid container justify=\"center\" spacing={2}\n                            alignItems=\"stretch\">\n                            <Grid item>\n                                <Paper>\n                                    GDP: {Math.round(100 * gdp, 2)}%\n                            </Paper>\n                            </Grid>\n                            <Grid item>\n                                <Paper>\n                                    Death Toll: {death}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n\n                <Grid item>\n                    <Paper>\n                        <LinearProgress variant=\"determinate\" value={progressRate} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper>\n                        <MobileStepper\n                            variant=\"dots\"\n                            steps={6}\n                            position=\"static\"\n                            activeStep={activeStep}\n                            nextButton={\n                                <Button size=\"small\" onClick={handleNext} disabled={activeStep === 5}>\n                                    Next\n                                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                                </Button>\n                            }\n                            backButton={\n                                <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                                Back\n                                </Button>\n                            }\n                        />\n                        <ChartWrapper config={IGraphCfg} width={100} height={50} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper>\n                        <ChartWrapper config={GDPGraphCfg} width={100} height={50} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper>\n                        <ChartWrapper config={R0GraphCfg} width={100} height={30} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <R0Slider setR0={setR0} />\n                </Grid>\n            </Grid>\n        </Container >\n    );\n}   ","import './App.css';\nimport React from 'react';\nimport Dashboard from \"./Dashboard\";\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\nfunction HideAppBar(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">Covid Simulator</Typography>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Dashboard />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}