{"version":3,"sources":["Animate.js","ChartWrapper.js","R0Slider.js","GameWorker.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Animate","fps","draw","that","this","animationFrameId","start","frameCount","startDate","Date","now","lastUpdate","render","elapsedMils","elapsed","frameId","window","requestAnimationFrame","stop","console","log","cancelAnimationFrame","props","containerRef","useRef","name","data","rest","useState","chart","setChart","useEffect","datasets","update","ctx","current","config","type","label","fill","options","responsive","title","display","text","scales","xAxes","yAxes","scaleLabel","labelString","myChart","Chart","ref","width","height","useStyles","makeStyles","theme","root","margin","spacing","control","padding","marks","value","valuetext","classes","setR0","Paper","className","Typography","id","gutterBottom","Slider","min","max","defaultValue","getAriaValueText","aria-labelledby","step","onChange","event","newValue","valueLabelDisplay","Worker","setData","data_GDP","setData_GDP","death","setDeath","gdp","setGDP","R0","gameWorkerRef","setGameWorkerRef","gameWorker","GameWorker","onmessage","t","I","GDP","Math","floor","D","oldData","y","params","postMessage","Container","maxWidth","Grid","container","direction","justify","alignItems","item","xs","round","ChartWrapper","R0Slider","HideOnScroll","children","trigger","useScrollTrigger","target","undefined","Slide","appear","in","HideAppBar","Fragment","CssBaseline","AppBar","Toolbar","variant","App","Dashboard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee0aaa56.chunk.js","sourcesContent":["function Animate(fps, draw) {\n    var that = this;\n\n    that.animationFrameId = 0;\n\n    that.start = () => {\n        let frameCount = 0\n        let animationFrameId\n\n        const startDate = Date.now()\n        var lastUpdate = startDate\n\n        function render() {\n            var now = Date.now()\n            var elapsedMils = now - lastUpdate\n\n            if (elapsedMils >= (1000 / fps)) {\n                frameCount++;\n                if (draw) {\n                    draw({\n                        elapsed: now - startDate,\n                        frameId: frameCount,\n                    })\n                }\n                lastUpdate = now - elapsedMils % (1000 / fps)\n            }\n            that.animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n\n        return that\n    }\n\n\n    that.stop = () => {\n        console.log(that.animationFrameId)\n        window.cancelAnimationFrame(that.animationFrameId)\n    }\n\n}\n\nexport default Animate","import React, { useState, useRef, useEffect } from 'react'\n\nimport Chart from 'chart.js'\nimport Animate from \"./Animate\"\n\n\nexport default props => {\n    const containerRef = useRef(null)\n\n    const { name, data, ...rest } = props\n\n    const [chart, setChart] = useState();\n\n    var date = new Date();\n\n\n    useEffect(() => {\n        if (chart) {\n            chart.data.datasets[0].data = data;\n            chart.update();\n        }\n    }, [data]);\n\n    useEffect(() => {\n        var ctx = containerRef.current;\n        var config = {\n            type: 'line',\n            data: {\n                datasets: [{\n                    label: 'Filled',\n                    data: [],\n                    fill: true,\n                }]\n            },\n            options: {\n                responsive: true,\n                title: {\n                    display: true,\n                    text: name\n                },\n                scales: {\n                    xAxes: [{\n                        display: true,\n                        type: 'time',\n                    }],\n                    yAxes: [{\n                        display: true,\n                        scaleLabel: {\n                            display: true,\n                            labelString: 'Value'\n                        }\n                    }]\n                }\n            }\n        };\n        var myChart = new Chart(ctx, config);\n\n        setChart(myChart);\n\n        /*\n        var animation = new Animate(0.01, params => {\n            myChart.data.datasets.forEach((dataset) => {\n                dataset.data.push({\n                    t: date.addDays(params.frameId),\n                    y: Math.random()\n                });\n            });\n            myChart.update();\n        })\n\n        return animation.start().stop\n        */\n    }, [])\n\n    return <canvas ref={containerRef} {...rest} width={100} height={50} />\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst marks = [\n    {\n        value: 0.1,\n        label: '0.1',\n    },\n    {\n        value: 1.,\n        label: '1.0',\n    },\n    {\n        value: 2.,\n        label: '2.0',\n    },\n    {\n        value: 3.0,\n        label: '3.0',\n    },\n];\n\nfunction valuetext(value) {\n    return `R0=${value}`;\n}\n\n\nexport default (props) => {\n    const classes = useStyles();\n\n    const { setR0, ...rest } = props\n\n    const handleSliderChange = (event, newValue) => {\n        setR0(newValue);\n    };\n\n    return (\n        <Paper>\n            <div className={classes.root}>\n                <Typography id=\"discrete-slider-always\" gutterBottom>\n                    R0\n            </Typography>\n                <Slider\n                    min={0.1}\n                    max={3.}\n                    defaultValue={3.}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-always\"\n                    step={0.1}\n                    marks={marks}\n                    onChange={handleSliderChange}\n                    valueLabelDisplay=\"on\"\n                />\n            </div></Paper>\n    );\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/GameWorker.4bbe33a0.worker.js\");\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport ChartWrapper from \"./ChartWrapper\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport R0Slider from \"./R0Slider\";\nimport { useState } from 'react'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport GameWorker from 'worker-loader!./GameWorker.js';\n\nimport { useRef, useEffect } from 'react'\nimport Animate from \"./Animate\"\n\n\nexport default (props) => {\n    const [data, setData] = useState([]);\n    const [data_GDP, setData_GDP] = useState([]);\n    const [death, setDeath] = useState(0);\n    const [gdp, setGDP] = useState(0);\n\n    const [R0, setR0] = useState(3.);\n    const [gameWorkerRef, setGameWorkerRef] = useState();\n\n\n    useEffect(() => {\n        let gameWorker = (new GameWorker());\n        setGameWorkerRef(gameWorker);\n        var date = new Date();\n\n        console.log(\">>>\", gameWorker);\n\n        gameWorker.onmessage = (event) => {\n            const t = event.data.t;\n            const I = event.data.I;\n            const GDP = event.data.GDP;\n            setDeath(Math.floor(event.data.D));\n            setGDP(GDP);\n\n            setData(oldData => [...oldData, {\n                t: t,\n                y: I\n            }]);\n\n            setData_GDP(oldData => [...oldData, {\n                t: t,\n                y: GDP\n            }]);\n        };\n\n        var animation = new Animate(1, params => {\n            gameWorker.postMessage('getdata');\n        });\n\n        return animation.start().stop\n    }, []);\n\n\n    useEffect(() => {\n        if (gameWorkerRef) {\n            gameWorkerRef.postMessage({ \"R0\": R0, \"msg\": \"setR0\" })\n        }\n    }, [R0]);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container direction=\"column\"\n                justify=\"flex-start\"\n                alignItems=\"stretch\"\n                spacing={3}\n            >\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={2}\n                        alignItems=\"stretch\">\n                        <Grid item>\n                            <Paper>\n                                GDP: {Math.round(100 * gdp, 2)}%\n                            </Paper>\n                        </Grid>\n                        <Grid item>\n                            <Paper>\n                                Death Toll: {death}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item>\n                    <Paper>\n                        <ChartWrapper data={data} name={\"Infected\"} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <Paper>\n                        <ChartWrapper data={data_GDP} name={\"GDP\"} />\n                    </Paper>\n                </Grid>\n                <Grid item>\n                    <R0Slider setR0={setR0} />\n                </Grid>\n            </Grid>\n        </Container >\n    );\n}  ","import './App.css';\nimport React from 'react';\nimport Dashboard from \"./Dashboard\";\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Slide from '@material-ui/core/Slide';\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\nfunction HideAppBar(props) {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">Covid Simulator</Typography>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HideAppBar />\n        <Dashboard />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}